HEAD:{"commit": "5c12e1303c911345f17229ce0b5efbfd3e0a32df", "author": "Bob Conan", "date": "Thu Nov 7 16:59:52 2024 -0600", "message": "Update README.md, fix typos (#2073)"}
url:https://github.com/linnovate/mean
mode:recommended
project:mean
[]
mode:all
project:mean
[{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/admin/admin-user-guard.ts","messages":[{"ruleId":"@angular-eslint/use-injectable-provided-in","severity":2,"message":"The `providedIn` property is mandatory for `Injectables`","line":9,"column":1,"nodeType":"Decorator","messageId":"useInjectableProvidedIn","endLine":9,"endColumn":14,"suggestions":[{"messageId":"suggestInjector","fix":{"range":[231,231],"text":"{providedIn: 'any'}"},"data":{"injector":"any"},"desc":"Use `providedIn: 'any'`"},{"messageId":"suggestInjector","fix":{"range":[231,231],"text":"{providedIn: 'platform'}"},"data":{"injector":"platform"},"desc":"Use `providedIn: 'platform'`"},{"messageId":"suggestInjector","fix":{"range":[231,231],"text":"{providedIn: 'root'}"},"data":{"injector":"root"},"desc":"Use `providedIn: 'root'`"}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthService } from '@app/shared/services';\n\n@Injectable()\nexport class OnlyAdminUsersGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authService.getUser().pipe(map(user => !!user?.isAdmin));\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/admin/admin.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":3,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":6,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,59],"text":", ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n})\nexport class AdminComponent {}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/app.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":10,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":14,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,312],"text":", ChangeDetectionStrategy } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { merge, Observable } from 'rxjs';\n\nimport { User } from './shared/interfaces';\nimport { AuthService } from './shared/services';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":13,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":13,"endColumn":38,"fix":{"range":[375,410],"text":"styleUrl: './app.component.scss'"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { merge, Observable } from 'rxjs';\n\nimport { User } from './shared/interfaces';\nimport { AuthService } from './shared/services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  user$: Observable<User | null> = merge(\n    // Init on startup\n    this.authService.me(),\n    // Update after login/register/logout\n    this.authService.getUser()\n  );\n\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private matIconRegistry: MatIconRegistry,\n    private authService: AuthService\n  ) {\n    this.registerSvgIcons();\n  }\n\n  registerSvgIcons() {\n    [\n      'close',\n      'add',\n      'add-blue',\n      'airplane-front-view',\n      'air-station',\n      'balloon',\n      'boat',\n      'cargo-ship',\n      'car',\n      'catamaran',\n      'clone',\n      'convertible',\n      'delete',\n      'drone',\n      'fighter-plane',\n      'fire-truck',\n      'horseback-riding',\n      'motorcycle',\n      'railcar',\n      'railroad-train',\n      'rocket-boot',\n      'sailing-boat',\n      'segway',\n      'shuttle',\n      'space-shuttle',\n      'steam-engine',\n      'suv',\n      'tour-bus',\n      'tow-truck',\n      'transportation',\n      'trolleybus',\n      'water-transportation',\n    ].forEach(icon => {\n      this.matIconRegistry.addSvgIcon(\n        icon,\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          `assets/icons/${icon}.svg`\n        )\n      );\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/auth/login/login.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":6,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":10,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,154],"text":", ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":9,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":9,"endColumn":40,"fix":{"range":[220,257],"text":"styleUrl: '../auth.component.scss'"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.component.scss'],\n})\nexport class LoginComponent {\n  email: string | null = null;\n  password: string | null = null;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  login(): void {\n    this.authService.login(this.email!, this.password!).subscribe(() => {\n      this.router.navigateByUrl('/');\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/auth/register/register.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":13,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":17,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,283],"text":", ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  UntypedFormGroup,\n  UntypedFormControl,\n  Validators,\n  ValidationErrors,\n  AbstractControl,\n} from '@angular/forms';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":16,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":16,"endColumn":40,"fix":{"range":[355,392],"text":"styleUrl: '../auth.component.scss'"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  UntypedFormGroup,\n  UntypedFormControl,\n  Validators,\n  ValidationErrors,\n  AbstractControl,\n} from '@angular/forms';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../auth.component.scss'],\n})\nexport class RegisterComponent {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  passwordsMatchValidator(\n    control: UntypedFormControl\n  ): ValidationErrors | null {\n    const password = control.root.get('password');\n    return password && control.value !== password.value\n      ? {\n          passwordMatch: true,\n        }\n      : null;\n  }\n\n  userForm = new UntypedFormGroup({\n    fullname: new UntypedFormControl('', [Validators.required]),\n    email: new UntypedFormControl('', [Validators.required, Validators.email]),\n    password: new UntypedFormControl('', [Validators.required]),\n    repeatPassword: new UntypedFormControl('', [\n      Validators.required,\n      this.passwordsMatchValidator,\n    ]),\n  });\n\n  get fullname(): AbstractControl {\n    return this.userForm.get('fullname')!;\n  }\n\n  get email(): AbstractControl {\n    return this.userForm.get('email')!;\n  }\n\n  get password(): AbstractControl {\n    return this.userForm.get('password')!;\n  }\n\n  get repeatPassword(): AbstractControl {\n    return this.userForm.get('repeatPassword')!;\n  }\n\n  register(): void {\n    if (this.userForm.invalid) {\n      return;\n    }\n\n    const { fullname, email, password, repeatPassword } =\n      this.userForm.getRawValue();\n\n    this.authService\n      .register(fullname, email, password, repeatPassword)\n      .subscribe(() => {\n        this.router.navigate(['']);\n      });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/header/header.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":8,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":12,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[25,209],"text":", ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/shared/interfaces';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":11,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":11,"endColumn":41,"fix":{"range":[277,315],"text":"styleUrl: './header.component.scss'"}},{"ruleId":"@angular-eslint/prefer-signals","severity":2,"message":"Use `InputSignal`s (e.g. via `input()`) for Component input properties rather than the legacy `@Input()` decorator","line":14,"column":3,"nodeType":"Decorator","messageId":"preferInputSignals","endLine":14,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '@app/shared/interfaces';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Input() user: User | null = null;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  logout(): void {\n    this.authService.signOut();\n    this.router.navigateByUrl('/auth/login');\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/mean/src/app/home/home.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":3,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":7,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,59],"text":", ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":6,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":6,"endColumn":39,"fix":{"range":[123,159],"text":"styleUrl: './home.component.scss'"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {}\n","usedDeprecatedRules":[]}]
