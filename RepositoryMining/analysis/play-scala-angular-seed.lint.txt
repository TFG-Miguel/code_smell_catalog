HEAD:{"commit": "814ab8bc3a2002edcf71952c7aed7eaf635a54b4", "author": "Matthias Kurz", "date": "Thu Mar 13 23:39:41 2025 +0100", "message": "Merge pull request #88 from scala-steward/update/play-filters-helpers-3.0.7"}
url:https://github.com/playframework/play-scala-angular-seed
mode:recommended
project:scala-play-angular-seed
[]
mode:all
project:scala-play-angular-seed
[{"filePath":"/home/migudel/Documentos/TFG/repos/propios/play-scala-angular-seed/ui/src/app/app.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":5,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":9,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,104],"text":", ChangeDetectionStrategy } from '@angular/core';\n\nimport { AppService } from './app.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":8,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":8,"endColumn":37,"fix":{"range":[167,201],"text":"styleUrl: './app.component.css'"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\n\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string | undefined;\n  postRequestResponse: string | undefined;\n\n  constructor(private appService: AppService) {\n    this.appService.getWelcomeMessage().subscribe((data: any) => {\n      this.title = data.content;\n    });\n  }\n\n  /**\n   * This method is used to test the post request\n   */\n  public postData(): void {\n    this.appService.sendData().subscribe((data: any) => {\n      this.postRequestResponse = data.content;\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/play-scala-angular-seed/ui/src/app/app.service.ts","messages":[{"ruleId":"@angular-eslint/use-injectable-provided-in","severity":2,"message":"The `providedIn` property is mandatory for `Injectables`","line":12,"column":1,"nodeType":"Decorator","messageId":"useInjectableProvidedIn","endLine":12,"endColumn":14,"suggestions":[{"messageId":"suggestInjector","fix":{"range":[264,264],"text":"{providedIn: 'any'}"},"data":{"injector":"any"},"desc":"Use `providedIn: 'any'`"},{"messageId":"suggestInjector","fix":{"range":[264,264],"text":"{providedIn: 'platform'}"},"data":{"injector":"platform"},"desc":"Use `providedIn: 'platform'`"},{"messageId":"suggestInjector","fix":{"range":[264,264],"text":"{providedIn: 'root'}"},"data":{"injector":"root"},"desc":"Use `providedIn: 'root'`"}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/index';\n\n/**\n * Class representing application service.\n *\n * @class AppService.\n */\n@Injectable()\nexport class AppService {\n  private serviceUrl = '/api/summary';\n  private dataPostTestUrl = '/api/postTest';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * Makes a http get request to retrieve the welcome message from the backend service.\n   */\n  public getWelcomeMessage() {\n    return this.http.get(this.serviceUrl).pipe(\n      map(response => response)\n    );\n  }\n\n  /**\n   * Makes a http post request to send some data to backend & get response.\n   */\n  public sendData(): Observable<any> {\n    return this.http.post(this.dataPostTestUrl, {});\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/migudel/Documentos/TFG/repos/propios/play-scala-angular-seed/ui/src/app/route-example/route-example.component.ts","messages":[{"ruleId":"@angular-eslint/prefer-on-push-component-change-detection","severity":2,"message":"The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`","line":6,"column":1,"nodeType":"Decorator","messageId":"preferOnPushComponentChangeDetection","endLine":10,"endColumn":3,"suggestions":[{"messageId":"suggestAddChangeDetectionOnPush","fix":{"range":[18,148],"text":", ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,"},"desc":"Add `ChangeDetectionStrategy.OnPush`"}]},{"ruleId":"@angular-eslint/consistent-component-styles","severity":2,"message":"Use `styleUrl` instead of `styleUrls` for a single stylesheet","line":9,"column":3,"nodeType":"Property","messageId":"useStyleUrl","endLine":9,"endColumn":47,"fix":{"range":[230,274],"text":"styleUrl: './route-example.component.css'"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-route-example',\n  templateUrl: './route-example.component.html',\n  styleUrls: ['./route-example.component.css']\n})\nexport class RouteExampleComponent {\n  public tech: any;\n\n  constructor(route: ActivatedRoute) {\n    this.tech = route.data.pipe(map(data => data.technology));\n  }\n}\n","usedDeprecatedRules":[]}]
