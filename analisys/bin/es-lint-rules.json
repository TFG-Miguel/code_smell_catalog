{
  "contextual-lifecycle": {
    "description": "Ensures that lifecycle methods are used in a correct context",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "no-async-lifecycle-method": {
    "description": "Angular Lifecycle methods should not be async. Angular does not wait for async lifecycle but the code incorrectly suggests it does.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-attribute-decorator": {
    "description": "The @Attribute decorator is used to obtain a single value for an attribute. This is a much less common use-case than getting a stream of values (using @Input), so often the @Attribute decorator is mistakenly used when @Input was what was intended. This rule disallows usage of @Attribute decorator altogether in order to prevent these mistakes.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "require-lifecycle-on-prototype": {
    "description": "Ensures that lifecycle methods are defined on the object's prototype instead of on an instance.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "sort-lifecycle-methods": {
    "description": "Ensures that lifecycle methods are declared in order of execution",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "component-class-suffix": {
    "description": "Classes decorated with @Component must have suffix \"Component\" (or custom) in their name. See more athttps://angular.dev/style-guide#style-02-03",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "component-max-inline-declarations": {
    "description": "Enforces a maximum number of lines in inline template, styles and animations. See more athttps://angular.dev/style-guide#style-05-04",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "component-selector": {
    "description": "Component selectors should follow given naming rules. See more athttps://angular.dev/style-guide#style-02-07,https://angular.dev/style-guide#style-05-02andhttps://angular.dev/style-guide#style-05-03.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "consistent-component-styles": {
    "description": "Ensures consistent usage ofstyles/styleUrls/styleUrlwithin Component metadata",
    "recommended": false,
    "fixable": true,
    "has_suggestions": false
  },
  "contextual-decorator": {
    "description": "Ensures that classes use contextual decorators in its body",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "directive-class-suffix": {
    "description": "Classes decorated with @Directive must have suffix \"Directive\" (or custom) in their name. See more athttps://angular.dev/style-guide#style-02-03",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "directive-selector": {
    "description": "Directive selectors should follow given naming rules. See more athttps://angular.dev/style-guide#style-02-06andhttps://angular.dev/style-guide#style-02-08.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-conflicting-lifecycle": {
    "description": "Ensures that directives not implement conflicting lifecycle interfaces.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-duplicates-in-metadata-arrays": {
    "description": "Ensures that metadata arrays do not contain duplicate entries.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-empty-lifecycle-method": {
    "description": "Disallows declaring empty lifecycle methods",
    "recommended": true,
    "fixable": false,
    "has_suggestions": true
  },
  "no-forward-ref": {
    "description": "Disallows usage offorwardRefreferences for DI",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-input-prefix": {
    "description": "Ensures that input bindings, including aliases, are not named or prefixed by the configured disallowed prefixes",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-input-rename": {
    "description": "Ensures that input bindings are not aliased",
    "recommended": true,
    "fixable": true,
    "has_suggestions": true
  },
  "no-inputs-metadata-property": {
    "description": "Disallows usage of theinputsmetadata property. See more athttps://angular.dev/style-guide#style-05-12",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "no-lifecycle-call": {
    "description": "Disallows explicit calls to lifecycle methods",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "no-output-native": {
    "description": "Ensures that output bindings, including aliases, are not named as standard DOM events",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "no-output-on-prefix": {
    "description": "Ensures that output bindings, including aliases, are not named \"on\", nor prefixed with it. See more athttps://angular.dev/style-guide#style-05-16",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "no-output-rename": {
    "description": "Ensures that output bindings are not aliased",
    "recommended": true,
    "fixable": true,
    "has_suggestions": true
  },
  "no-outputs-metadata-property": {
    "description": "Disallows usage of theoutputsmetadata property. See more athttps://angular.dev/style-guide#style-05-12",
    "recommended": true,
    "fixable": false,
    "has_suggestions": false
  },
  "no-pipe-impure": {
    "description": "Disallows the declaration of impure pipes",
    "recommended": false,
    "fixable": false,
    "has_suggestions": true
  },
  "no-queries-metadata-property": {
    "description": "Disallows usage of thequeriesmetadata property. See more athttps://angular.dev/style-guide#style-05-12.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "pipe-prefix": {
    "description": "Enforce consistent prefix for pipes.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "prefer-on-push-component-change-detection": {
    "description": "Ensures component'schangeDetectionis set toChangeDetectionStrategy.OnPush",
    "recommended": false,
    "fixable": false,
    "has_suggestions": true
  },
  "prefer-output-readonly": {
    "description": "Prefer to declare@Output,OutputEmitterRefandOutputRefasreadonlysince they are not supposed to be reassigned",
    "recommended": false,
    "fixable": false,
    "has_suggestions": true
  },
  "prefer-signals": {
    "description": "Use readonly signals instead of@Input(),@ViewChild()and other legacy decorators",
    "recommended": false,
    "fixable": true,
    "has_suggestions": false
  },
  "prefer-standalone": {
    "description": "Ensures Components, Directives and Pipes do not opt out of standalone",
    "recommended": true,
    "fixable": true,
    "has_suggestions": false
  },
  "relative-url-prefix": {
    "description": "The ./ and ../ prefix is standard syntax for relative URLs; don't depend on Angular's current ability to do without that prefix. See more athttps://angular.dev/style-guide#style-05-04",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "require-localize-metadata": {
    "description": "Ensures that $localize tagged messages contain helpful metadata to aid with translations.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "runtime-localize": {
    "description": "Ensures that $localize tagged messages can use runtime-loaded translations.",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "use-component-selector": {
    "description": "Component selector must be declared",
    "recommended": false,
    "fixable": false,
    "has_suggestions": false
  },
  "use-component-view-encapsulation": {
    "description": "Disallows usingViewEncapsulation.None",
    "recommended": false,
    "fixable": false,
    "has_suggestions": true
  },
  "use-injectable-provided-in": {
    "description": "Using theprovidedInproperty makesInjectablestree-shakable",
    "recommended": false,
    "fixable": false,
    "has_suggestions": true
  },
  "use-lifecycle-interface": {
    "description": "Ensures that classes implement lifecycle interfaces corresponding to the declared lifecycle methods. See more athttps://angular.dev/style-guide#style-09-01",
    "recommended": false,
    "fixable": true,
    "has_suggestions": false
  },
  "use-pipe-transform-interface": {
    "description": "Ensures thatPipesimplementPipeTransforminterface",
    "recommended": true,
    "fixable": true,
    "has_suggestions": false
  }
}
