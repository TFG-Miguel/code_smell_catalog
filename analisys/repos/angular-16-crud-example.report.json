{
  "repo": {
    "HEAD": {
      "commit": "e760ebb02fd950b478b0fa863e767b672929b10d",
      "author": "tienbku",
      "date": "Thu May 25 15:57:13 2023 +0700",
      "message": "first commit"
    },
    "url": "https://github.com/bezkoder/angular-16-crud-example"
  },
  "report": {
    "angular-16-crud": {
      "recommended": [],
      "all": [
        {
          "filePath": "/home/migudel/Documentos/TFG/repos/propios/angular-16-crud-example/src/app/app.component.ts",
          "messages": [
            {
              "ruleId": "@angular-eslint/prefer-on-push-component-change-detection",
              "severity": 2,
              "message": "The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`",
              "line": 3,
              "column": 1,
              "nodeType": "Decorator",
              "messageId": "preferOnPushComponentChangeDetection",
              "endLine": 7,
              "endColumn": 3,
              "suggestions": [
                {
                  "messageId": "suggestAddChangeDetectionOnPush",
                  "fix": {
                    "range": [
                      18,
                      59
                    ],
                    "text": ", ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n changeDetection: ChangeDetectionStrategy.OnPush,"
                  },
                  "desc": "Add `ChangeDetectionStrategy.OnPush`"
                }
              ]
            },
            {
              "ruleId": "@angular-eslint/consistent-component-styles",
              "severity": 2,
              "message": "Use `styleUrl` instead of `styleUrls` for a single stylesheet",
              "line": 6,
              "column": 3,
              "nodeType": "Property",
              "messageId": "useStyleUrl",
              "endLine": 6,
              "endColumn": 37,
              "fix": {
                "range": [
                  122,
                  156
                ],
                "text": "styleUrl: './app.component.css'"
              }
            }
          ],
          "suppressedMessages": [],
          "errorCount": 2,
          "fatalErrorCount": 0,
          "warningCount": 0,
          "fixableErrorCount": 1,
          "fixableWarningCount": 0,
          "source": "import { Component } from '@angular/core';\n\n@Component({\n selector: 'app-root',\n templateUrl: './app.component.html',\n styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n title = 'Angular 16 Crud example';\n}\n",
          "usedDeprecatedRules": []
        },
        {
          "filePath": "/home/migudel/Documentos/TFG/repos/propios/angular-16-crud-example/src/app/components/add-tutorial/add-tutorial.component.ts",
          "messages": [
            {
              "ruleId": "@angular-eslint/prefer-on-push-component-change-detection",
              "severity": 2,
              "message": "The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`",
              "line": 5,
              "column": 1,
              "nodeType": "Decorator",
              "messageId": "preferOnPushComponentChangeDetection",
              "endLine": 9,
              "endColumn": 3,
              "suggestions": [
                {
                  "messageId": "suggestAddChangeDetectionOnPush",
                  "fix": {
                    "range": [
                      18,
                      186
                    ],
                    "text": ", ChangeDetectionStrategy } from '@angular/core';\nimport { Tutorial } from 'src/app/models/tutorial.model';\nimport { TutorialService } from 'src/app/services/tutorial.service';\n\n@Component({\n changeDetection: ChangeDetectionStrategy.OnPush,"
                  },
                  "desc": "Add `ChangeDetectionStrategy.OnPush`"
                }
              ]
            },
            {
              "ruleId": "@angular-eslint/consistent-component-styles",
              "severity": 2,
              "message": "Use `styleUrl` instead of `styleUrls` for a single stylesheet",
              "line": 8,
              "column": 3,
              "nodeType": "Property",
              "messageId": "useStyleUrl",
              "endLine": 8,
              "endColumn": 46,
              "fix": {
                "range": [
                  266,
                  309
                ],
                "text": "styleUrl: './add-tutorial.component.css'"
              }
            }
          ],
          "suppressedMessages": [],
          "errorCount": 2,
          "fatalErrorCount": 0,
          "warningCount": 0,
          "fixableErrorCount": 1,
          "fixableWarningCount": 0,
          "source": "import { Component } from '@angular/core';\nimport { Tutorial } from 'src/app/models/tutorial.model';\nimport { TutorialService } from 'src/app/services/tutorial.service';\n\n@Component({\n selector: 'app-add-tutorial',\n templateUrl: './add-tutorial.component.html',\n styleUrls: ['./add-tutorial.component.css'],\n})\nexport class AddTutorialComponent {\n tutorial: Tutorial = {\n title: '',\n description: '',\n published: false\n };\n submitted = false;\n\n constructor(private tutorialService: TutorialService) {}\n\n saveTutorial(): void {\n const data = {\n title: this.tutorial.title,\n description: this.tutorial.description\n };\n\n this.tutorialService.create(data).subscribe({\n next: (res) => {\n console.log(res);\n this.submitted = true;\n },\n error: (e) => console.error(e)\n });\n }\n\n newTutorial(): void {\n this.submitted = false;\n this.tutorial = {\n title: '',\n description: '',\n published: false\n };\n }\n}\n",
          "usedDeprecatedRules": []
        },
        {
          "filePath": "/home/migudel/Documentos/TFG/repos/propios/angular-16-crud-example/src/app/components/tutorial-details/tutorial-details.component.ts",
          "messages": [
            {
              "ruleId": "@angular-eslint/prefer-on-push-component-change-detection",
              "severity": 2,
              "message": "The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`",
              "line": 6,
              "column": 1,
              "nodeType": "Decorator",
              "messageId": "preferOnPushComponentChangeDetection",
              "endLine": 10,
              "endColumn": 3,
              "suggestions": [
                {
                  "messageId": "suggestAddChangeDetectionOnPush",
                  "fix": {
                    "range": [
                      33,
                      259
                    ],
                    "text": ", ChangeDetectionStrategy } from '@angular/core';\nimport { TutorialService } from 'src/app/services/tutorial.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Tutorial } from 'src/app/models/tutorial.model';\n\n@Component({\n changeDetection: ChangeDetectionStrategy.OnPush,"
                  },
                  "desc": "Add `ChangeDetectionStrategy.OnPush`"
                }
              ]
            },
            {
              "ruleId": "@angular-eslint/consistent-component-styles",
              "severity": 2,
              "message": "Use `styleUrl` instead of `styleUrls` for a single stylesheet",
              "line": 9,
              "column": 3,
              "nodeType": "Property",
              "messageId": "useStyleUrl",
              "endLine": 9,
              "endColumn": 50,
              "fix": {
                "range": [
                  347,
                  394
                ],
                "text": "styleUrl: './tutorial-details.component.css'"
              }
            },
            {
              "ruleId": "@angular-eslint/prefer-signals",
              "severity": 2,
              "message": "Use `InputSignal`s (e.g. via `input()`) for Component input properties rather than the legacy `@Input()` decorator",
              "line": 12,
              "column": 3,
              "nodeType": "Decorator",
              "messageId": "preferInputSignals",
              "endLine": 12,
              "endColumn": 11
            },
            {
              "ruleId": "@angular-eslint/prefer-signals",
              "severity": 2,
              "message": "Use `InputSignal`s (e.g. via `input()`) for Component input properties rather than the legacy `@Input()` decorator",
              "line": 14,
              "column": 3,
              "nodeType": "Decorator",
              "messageId": "preferInputSignals",
              "endLine": 14,
              "endColumn": 11
            }
          ],
          "suppressedMessages": [],
          "errorCount": 4,
          "fatalErrorCount": 0,
          "warningCount": 0,
          "fixableErrorCount": 1,
          "fixableWarningCount": 0,
          "source": "import { Component, Input, OnInit } from '@angular/core';\nimport { TutorialService } from 'src/app/services/tutorial.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Tutorial } from 'src/app/models/tutorial.model';\n\n@Component({\n selector: 'app-tutorial-details',\n templateUrl: './tutorial-details.component.html',\n styleUrls: ['./tutorial-details.component.css'],\n})\nexport class TutorialDetailsComponent implements OnInit {\n @Input() viewMode = false;\n\n @Input() currentTutorial: Tutorial = {\n title: '',\n description: '',\n published: false\n };\n\n message = '';\n\n constructor(\n private tutorialService: TutorialService,\n private route: ActivatedRoute,\n private router: Router\n ) {}\n\n ngOnInit(): void {\n if (!this.viewMode) {\n this.message = '';\n this.getTutorial(this.route.snapshot.params['id']);\n }\n }\n\n getTutorial(id: string): void {\n this.tutorialService.get(id).subscribe({\n next: (data) => {\n this.currentTutorial = data;\n console.log(data);\n },\n error: (e) => console.error(e)\n });\n }\n\n updatePublished(status: boolean): void {\n const data = {\n title: this.currentTutorial.title,\n description: this.currentTutorial.description,\n published: status\n };\n\n this.message = '';\n\n this.tutorialService.update(this.currentTutorial.id, data).subscribe({\n next: (res) => {\n console.log(res);\n this.currentTutorial.published = status;\n this.message = res.message\n ? res.message\n : 'The status was updated successfully!';\n },\n error: (e) => console.error(e)\n });\n }\n\n updateTutorial(): void {\n this.message = '';\n\n this.tutorialService\n .update(this.currentTutorial.id, this.currentTutorial)\n .subscribe({\n next: (res) => {\n console.log(res);\n this.message = res.message\n ? res.message\n : 'This tutorial was updated successfully!';\n },\n error: (e) => console.error(e)\n });\n }\n\n deleteTutorial(): void {\n this.tutorialService.delete(this.currentTutorial.id).subscribe({\n next: (res) => {\n console.log(res);\n this.router.navigate(['/tutorials']);\n },\n error: (e) => console.error(e)\n });\n }\n}\n",
          "usedDeprecatedRules": []
        },
        {
          "filePath": "/home/migudel/Documentos/TFG/repos/propios/angular-16-crud-example/src/app/components/tutorials-list/tutorials-list.component.ts",
          "messages": [
            {
              "ruleId": "@angular-eslint/prefer-on-push-component-change-detection",
              "severity": 2,
              "message": "The component's `changeDetection` value should be set to `ChangeDetectionStrategy.OnPush`",
              "line": 5,
              "column": 1,
              "nodeType": "Decorator",
              "messageId": "preferOnPushComponentChangeDetection",
              "endLine": 9,
              "endColumn": 3,
              "suggestions": [
                {
                  "messageId": "suggestAddChangeDetectionOnPush",
                  "fix": {
                    "range": [
                      26,
                      194
                    ],
                    "text": ", ChangeDetectionStrategy } from '@angular/core';\nimport { Tutorial } from 'src/app/models/tutorial.model';\nimport { TutorialService } from 'src/app/services/tutorial.service';\n\n@Component({\n changeDetection: ChangeDetectionStrategy.OnPush,"
                  },
                  "desc": "Add `ChangeDetectionStrategy.OnPush`"
                }
              ]
            },
            {
              "ruleId": "@angular-eslint/consistent-component-styles",
              "severity": 2,
              "message": "Use `styleUrl` instead of `styleUrls` for a single stylesheet",
              "line": 8,
              "column": 3,
              "nodeType": "Property",
              "messageId": "useStyleUrl",
              "endLine": 8,
              "endColumn": 48,
              "fix": {
                "range": [
                  278,
                  323
                ],
                "text": "styleUrl: './tutorials-list.component.css'"
              }
            }
          ],
          "suppressedMessages": [],
          "errorCount": 2,
          "fatalErrorCount": 0,
          "warningCount": 0,
          "fixableErrorCount": 1,
          "fixableWarningCount": 0,
          "source": "import { Component, OnInit } from '@angular/core';\nimport { Tutorial } from 'src/app/models/tutorial.model';\nimport { TutorialService } from 'src/app/services/tutorial.service';\n\n@Component({\n selector: 'app-tutorials-list',\n templateUrl: './tutorials-list.component.html',\n styleUrls: ['./tutorials-list.component.css'],\n})\nexport class TutorialsListComponent implements OnInit {\n tutorials?: Tutorial[];\n currentTutorial: Tutorial = {};\n currentIndex = -1;\n title = '';\n\n constructor(private tutorialService: TutorialService) {}\n\n ngOnInit(): void {\n this.retrieveTutorials();\n }\n\n retrieveTutorials(): void {\n this.tutorialService.getAll().subscribe({\n next: (data) => {\n this.tutorials = data;\n console.log(data);\n },\n error: (e) => console.error(e)\n });\n }\n\n refreshList(): void {\n this.retrieveTutorials();\n this.currentTutorial = {};\n this.currentIndex = -1;\n }\n\n setActiveTutorial(tutorial: Tutorial, index: number): void {\n this.currentTutorial = tutorial;\n this.currentIndex = index;\n }\n\n removeAllTutorials(): void {\n this.tutorialService.deleteAll().subscribe({\n next: (res) => {\n console.log(res);\n this.refreshList();\n },\n error: (e) => console.error(e)\n });\n }\n\n searchTitle(): void {\n this.currentTutorial = {};\n this.currentIndex = -1;\n\n this.tutorialService.findByTitle(this.title).subscribe({\n next: (data) => {\n this.tutorials = data;\n console.log(data);\n },\n error: (e) => console.error(e)\n });\n }\n}\n",
          "usedDeprecatedRules": []
        }
      ]
    }
  }
}
